function findMonth(vMonth)
{
	// Ищем индекс в списке месяцев
	return ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'].indexOf(vMonth);	
}

/** Проверяет является ли год високосным
* @param vYear проверяемый год
* @return 1, если год високосный, иначе 0 */
function bigYear(vYear)
{
	// Високосный год делится на 400 без остатка
	if ((vYear % 400) === 0)
		// Устанавливаем флаг в значение 1 для високосного года
		return 1;
	else
		// Високосный год делится на 4 без остатка, но
		// год, который делится на 100 без остатка, не является високосным
		if (((vYear % 4) === 0) && ((vYear % 100) !== 0))
			// Устанавливаем флаг в значение 1 для високосного года
			return 1;
	// Год не високосный
	return 0;
}

/** Проверяет ввод данных 
* @param vD день заданной даты
* @param vM месяц заданной даты
* @param vY год заданной даты
* @return 0, если нет ошибок, либо текст ошибки */
function wrongArgs(vD, vM, vY)
{
	// Проверяем является ли d числом
	if (isNaN(vD))
		return 'Неправильно указан день';
	// Преобразуем d в число
	vD = parseInt(vD);
	// Проверка введенного числа
	if (vD <= 0)
		return 'Неправильно указан день';

	// Проверяем является ли m месяцем
	if (findMonth(vM) === -1)
		return 'Неправильно указан месяц';

	// Проверяем является ли y числом из заданного отрезка
	if (isNaN(vY))
		return 'Неправильно указан год';
	else
	{
		// Преобразуем y в число
		vY = parseInt(vY);
		if ((vY < 1) || (vY > 2999))
			return 'Неправильно указан год';
	}
	
	// если февраль
	if (vM === 'февраля')
	{
		// и день больше 28 для года, не являющегося високосным
		if ((vD > 28) && (bigYear(vY) === 0))
			return 'Неправильно указан день';
		else
			// иначе если день больше 29
			if (vD > 29)
				return 'Неправильно указан день';
	}
	else
		{
			// если день больше 30 для апреля, июня, сентября и ноября
			if ((vD > 30) && ((vM === 'апреля') || (vM === 'июня') || (vM === 'сентября') || (vM === 'ноября')))
				return 'Неправильно указан день';
			else
				// если день больше 31 для остальных месяцев
				if (vD > 31)
					return 'Неправильно указан день';
		}
	// Ошибки ввода отсутствуют
	return 0;
}

/** Определяет количество дней от переданной даты до нового года
* @param vDD день даты
* @param vMM месяц даты
* @param vYY год даты
* @return количество дней от переданной даты до нового года */
function countDays(vDD, vMM, vYY)
{
	// Переменная для хранения флага високосного года
	// По умолчанию год не високосный (значение 0)
	const year = bigYear(vYY);	

	// Переменная для хранения количества дней до нового года
	let days;

	// Определяем количество дней до нового года
	switch (vMM) {
		
		case 'января':
		days = 31+28+year+31+30+31+30+31+31+30+31+30+31-vDD;
		break;
		
		case 'февраля':
		days = 28+year+31+30+31+30+31+31+30+31+30+31-vDD;
		break;

		case 'марта':
		days = 31+30+31+30+31+31+30+31+30+31-vDD;
		break;

		case 'апреля':
		days = 30+31+30+31+31+30+31+30+31-vDD;
		break;

		case 'мая':
		days = 31+30+31+31+30+31+30+31-vDD;
		break;

		case 'июня':
		days = 30+31+31+30+31+30+31-vDD;
		break;

		case 'июля':
		days = 31+31+30+31+30+31-vDD;
		break;

		case 'августа':
		days = 31+30+31+30+31-vDD;
		break;

		case 'сентября':
		days = 30+31+30+31-vDD;
		break;

		case 'октября':
		days = 31+30+31-vDD;
		break;

		case 'ноября':
		days = 30+31-vDD;
		break;

		// декабрь
		default:
		days = 31-vDD;
		break;
	}
	return days;
}

function leftDays(dDate, mDate, yDate)
{
	/* Проверяем корректность введенных данных */
	/* Отключена проверка входных параметров
	const checkArguments = wrongArgs(dDate, mDate, yDate);
	// Если введены некоректные данные
	if (checkArguments !== 0)
	{
		// Выводим ошибку
		process.stdout.write(checkArguments);
	}
	// иначе введенные данные корректны
	else
	{*/
		// Представляем аргументы командной строки в виде чисел
		dDate = parseInt(dDate);
		yDate = parseInt(yDate);
		// Определяем и выводим количество дней до нового года
		// Выводим количество дней до нового года
		process.stdout.write(String(countDays(dDate, mDate, yDate)));
	//}
}

// Сохраняем значения аргументов командной строки, заданных в качестве даты, от которой рассчитывается количество дней до нового года
var dataForTask2 = [process.argv[2], process.argv[3], process.argv[4]];

// и выводим количество дней до нового года
leftDays(...dataForTask2);
